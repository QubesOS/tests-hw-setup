#!/bin/sh

. "$(dirname "$0")/functions"

hostid=1
case "$1" in
    --hostid=*) hostid="${1#--hostid=}"; shift ;;
esac

target_settings "$hostid"

#### MAIN START ####


if [ "$1" != "0" ]; then
    echo "Only the first disk can be saved!" >&2
    exit 1
fi

asset_path="$2"
mkdir -p "$(dirname "$asset_path")"

# wait for all the capacitors to deplete (takes longer when the system is shut
# off)
sleep 30

heads="$(jq -r .HEADS < vars.json)"
usbboot="$(jq -r .USBBOOT < vars.json)"
# convert "null" or "0" to empty
[ "$heads" != "1" ] && heads=
[ "$usbboot" != "1" ] && usbboot=

if [ -n "$heads" ] || [ -n "$usbboot" ]; then
    rm -f input-pipe
    mkfifo input-pipe
    trap 'rm -f input-pipe' EXIT
    sudo gadget-control --storage="/root/boot-disk-rescue2.img" < input-pipe &
    exec 9>input-pipe
fi

thor rescue poweron

if [ -n "$heads" ]; then
    sleep 15
    heads_boot_usb
elif [ -n "$usbboot" -a -x /usr/local/bin/boot-menu-interact ]; then
    /usr/local/bin/boot-menu-interact -n 9 "USB"
fi

# give it some time to boot
sleep 90
wait_boot || exit 1

# needs to be something, typically there will be just 1-2 active snapshots at a
# time, so the colision risk is minimal
snapid="$RANDOM"

ssh_target sh -c 'cat > /tmp/snapshot.sh && sh /tmp/snapshot.sh' <<EOF
set -e
set -x

if [ "\$(blkid "$lvmpart" -o value -s TYPE)" = "crypto_LUKS" ]; then
    cryptsetup open "$lvmpart" luks <<<"lukspass"
fi

rootvol=
for volume in \$(lvs -o vg_name,name --noheadings --separator '/' --select 'lv_role=public && lv_name !~ "^snap-" && pool_lv=~"..."'); do
    snapname="snap-$snapid-\${volume##*/}"
    lvcreate --ignoremonitoring -n "\$snapname" -s "\$volume"
    if [ "\${volume##*/}" = "root" ]; then
        rootvol="\${volume%/*}/\$snapname"
    fi
done

if [ -z "\$rootvol" ]; then
    echo "Root volume not found, aborting" >&2
    exit 1
fi

mkdir -p /mnt/sysroot /mnt/part
lvchange --ignoremonitoring -K -ay /dev/\$rootvol
mount /dev/\$rootvol /mnt/sysroot

if [ -e "$efipart" ] && [ "\$(blkid "$efipart" -o value -s TYPE)" = "vfat" ]; then
    mount "$efipart" /mnt/part -o ro
    rm -rf /mnt/sysroot/snap-efi
    cp -a /mnt/part /mnt/sysroot/snap-efi
    umount /mnt/part
fi

if [ -e "$bootpart" ] && [ "\$(blkid "$bootpart" -o value -s TYPE)" = "ext4" ]; then
    mount "$bootpart" /mnt/part -o ro
    rm -rf /mnt/sysroot/snap-boot
    cp -a /mnt/part /mnt/sysroot/snap-boot
    umount /mnt/part
fi

umount /mnt/sysroot
vgchange --ignoremonitoring -an
if [ -e /dev/mapper/luks ]; then
    sleep 1
    cryptsetup close luks
fi
exit 0
EOF

echo "$snapid" > "$asset_path"

thor poweroff openqa
